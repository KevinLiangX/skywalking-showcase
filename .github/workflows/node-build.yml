name: Build Node.js Services

on:
  push:
    paths: 
      - 'services/app/**/package.json'
      - 'services/app/**/src/**'
  workflow_dispatch:

jobs:
  build-node-services:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service: ['app-frontend', 'app-server']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: services/app/${{ matrix.service }}/package-lock.json

    - name: Install dependencies
      working-directory: services/app/${{ matrix.service }}
      run: npm ci

    - name: Build frontend
      if: matrix.service == 'app-frontend'
      working-directory: services/app/frontend
      run: npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Alibaba Cloud Container Registry
      uses: docker/login-action@v3
      with:
        registry: registry.cn-hangzhou.aliyuncs.com
        username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
        password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./services/app/${{ matrix.service }}
        file: ./services/app/${{ matrix.service }}/Dockerfile
        push: true
        tags: registry.cn-hangzhou.aliyuncs.com/${{ secrets.ALIYUN_NAMESPACE }}/${{ github.repository }}-app-${{ matrix.service }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
