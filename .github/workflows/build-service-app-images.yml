name: build-service-app-images

on:
  issue_comment:
    types: [created, edited]

jobs:
  build-image:
    if: |
      startsWith(github.event.comment.body, '/build') &&
      github.event.issue.pull_request == null
    runs-on: ubuntu-latest
    environment: Production
    
    permissions:
      contents: read
      issues: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Parse build command
      id: parse-command
      run: |
        COMMENT="${{ github.event.comment.body }}"
        
        # 提取参数：/build [service] [tag] [dockerfile]
        SERVICE=$(echo "$COMMENT" | awk '/\/build/ {print $2}')
        TAG=$(echo "$COMMENT" | awk '/\/build/ {print $3}')
        DOCKERFILE=$(echo "$COMMENT" | awk '/\/build/ {print $4}')
        
        # 设置默认值
        [[ -z "$SERVICE" ]] && SERVICE="app"
        [[ -z "$TAG" ]] && TAG="latest"
        [[ -z "$DOCKERFILE" ]] && DOCKERFILE="Dockerfile"
        
        # 关键修复：根据Dockerfile路径自动推导上下文目录
        CONTEXT_DIR=$(dirname "$DOCKERFILE")
        
        # 修复2：验证上下文目录（而非仅服务目录）
        if [ ! -d "$CONTEXT_DIR" ]; then
          echo "::error ::上下文目录 '$CONTEXT_DIR' 不存在"
          exit 1
        fi
        
        # 修复3：验证Dockerfile文件是否存在
        if [ ! -f "$DOCKERFILE" ]; then
          echo "::error ::Dockerfile '$DOCKERFILE' 不存在"
          exit 1
        fi
        
        echo "service=$SERVICE" >> $GITHUB_OUTPUT
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "dockerfile=$DOCKERFILE" >> $GITHUB_OUTPUT
        echo "context_dir=$CONTEXT_DIR" >> $GITHUB_OUTPUT

    # 登录阿里云容器镜像服务
    - name: Login to Aliyun ACR
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ALIYUN_REGISTRY }}
        username: ${{ secrets.ALIYUN_USERNAME }}
        password: ${{ secrets.ALIYUN_PASSWORD }}
        
    # 构建并推送到阿里云ACR
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ steps.parse-command.outputs.context_dir }}
        file: ${{ steps.parse-command.outputs.dockerfile }}
        push: true
        tags: |
          registry.cn-hangzhou.aliyuncs.com/imagefiles/${{ steps.parse-command.outputs.service }}:${{ steps.parse-command.outputs.tag }}
          registry.cn-hangzhou.aliyuncs.com/imagefiles/${{ steps.parse-command.outputs.service }}:latest
        
    - name: Add build comment
      uses: actions/github-script@v7
      env:
        SERVICE: ${{ steps.parse-command.outputs.service }}
        TAG: ${{ steps.parse-command.outputs.tag }}
        IMAGE_URL: registry.cn-hangzhou.aliyuncs.com/imagefiles/${{ steps.parse-command.outputs.service }}:${{ steps.parse-command.outputs.tag }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            issue_number: ${{ github.event.issue.number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `✅ 镜像已成功推送到阿里云ACR！\n` +
                   `**服务**: ${process.env.SERVICE}\n` +
                   `**标签**: ${process.env.TAG}\n` +
                   `**镜像地址**: \`${process.env.IMAGE_URL}\`\n` +
                   `**拉取命令**: \`docker pull ${process.env.IMAGE_URL}\``
          });
